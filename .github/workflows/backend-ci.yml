name: Backend CI
on:
  push:
    branches: [main]
    paths:
      - "ims-backend/**"
  pull_request:
    branches: [main]
    paths:
      - "ims-backend/**"
  workflow_dispatch:

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        working-directory: ./ims-backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        working-directory: ./ims-backend
        env:
          MONGODB_URL: mongodb://localhost:27017
          REDIS_URL: redis://localhost:6379
          ENVIRONMENT: test
        run: |
          python -m pytest tests/ -v

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./ims-backend
          push: false
          load: true
          tags: ims-backend-app:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Trivy vulnerability scanner step removed

      # --- Example: Use secrets for production or deployment ---
      # - name: Set environment variables from secrets
      #   env:
      #     MONGODB_URL: ${{ secrets.PROD_MONGODB_URL }}
      #     REDIS_URL: ${{ secrets.PROD_REDIS_URL }}
      #     SECRET_KEY: ${{ secrets.SECRET_KEY }}
      #     ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
      #   run: |
      #     echo "Secrets loaded for production/deployment"

      # - name: Log in to DockerHub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Log in to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GHCR_PAT }}

      # - name: Push Docker image to DockerHub
      #   run: |
      #     docker tag ims-backend-app:latest yourdockerhubuser/ims-backend-app:latest
      #     docker push yourdockerhubuser/ims-backend-app:latest

      # - name: Push Docker image to GitHub Container Registry
      #   run: |
      #     docker tag ims-backend-app:latest ghcr.io/youruser/ims-backend-app:latest
      #     docker push ghcr.io/youruser/ims-backend-app:latest

      # - name: Run Trivy vulnerability scanner with private DB
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: 'ims-backend-app:latest'
      #     format: 'table'
      #     exit-code: '1'
      #     ignore-unfixed: true
      #     severity: 'CRITICAL,HIGH'
      #   env:
      #     TRIVY_TOKEN: ${{ secrets.TRIVY_TOKEN }}
